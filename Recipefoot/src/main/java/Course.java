
import Recipefoot.*;

import java.io.*;
import java.util.ArrayList;

import javax.swing.ImageIcon;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellRenderer;
import javax.swing.table.TableColumn;

import java.awt.Component;
import java.awt.Image;

/**
 *
 * @author pondx
 */
public class Course extends javax.swing.JFrame {
    /**
     *
     */
    private static final long serialVersionUID = 1L;
    FileInputStream in = null;
    FileOutputStream out = null;

    public Course() {
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        toppicCourse = new javax.swing.JPanel();
        Texttopic = new javax.swing.JLabel();
        Mainpanel = new javax.swing.JPanel();
        Menulist = new javax.swing.JScrollPane();
        Menufoot = new javax.swing.JTable();
        Addme = new javax.swing.JButton();
        TextFoot = new javax.swing.JScrollPane();
        Recipe = new javax.swing.JTextArea();
        panal = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Food = new javax.swing.JTextArea();
        Namefood = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        toppicCourse.setBackground(new java.awt.Color(102, 102, 0));

        Texttopic.setFont(new java.awt.Font("Angsana New", 3, 48)); // NOI18N
        Texttopic.setForeground(new java.awt.Color(255, 255, 255));
        Texttopic.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        Texttopic.setText("Main Course");

        javax.swing.GroupLayout toppicCourseLayout = new javax.swing.GroupLayout(toppicCourse);
        toppicCourse.setLayout(toppicCourseLayout);
        toppicCourseLayout.setHorizontalGroup(
            toppicCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(toppicCourseLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Texttopic, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
                .addContainerGap())
        );
        toppicCourseLayout.setVerticalGroup(
            toppicCourseLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Texttopic, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );

        Mainpanel.setBackground(new java.awt.Color(255, 255, 255));
        Mainpanel.setForeground(new java.awt.Color(255, 255, 255));

        Menufoot.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2"
            }
        ));
        AddrowoTable1();
        Menufoot.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MenufootMouseClicked(evt);
            }
        });
        Menulist.setViewportView(Menufoot);

        Addme.setText("Add information");
        Addme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddmeActionPerformed(evt);
            }
        });

        Recipe.setEditable(false);
        Recipe.setColumns(20);
        Recipe.setRows(5);
        TextFoot.setViewportView(Recipe);

        Food.setEditable(false);
        Food.setColumns(20);
        Food.setRows(5);
        jScrollPane1.setViewportView(Food);

        Namefood.setEditable(false);

        javax.swing.GroupLayout MainpanelLayout = new javax.swing.GroupLayout(Mainpanel);
        Mainpanel.setLayout(MainpanelLayout);
        MainpanelLayout.setHorizontalGroup(
            MainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Menulist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGroup(MainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MainpanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(MainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(TextFoot)
                            .addGroup(MainpanelLayout.createSequentialGroup()
                                .addGap(208, 208, 208)
                                .addComponent(Addme, javax.swing.GroupLayout.DEFAULT_SIZE, 202, Short.MAX_VALUE))
                            .addComponent(jScrollPane1)
                            .addComponent(Namefood))
                        .addContainerGap())
                    .addGroup(MainpanelLayout.createSequentialGroup()
                        .addGap(106, 106, 106)
                        .addComponent(panal, javax.swing.GroupLayout.PREFERRED_SIZE, 228, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        MainpanelLayout.setVerticalGroup(
            MainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainpanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MainpanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Menulist, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(MainpanelLayout.createSequentialGroup()
                        .addComponent(panal, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Namefood, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(TextFoot, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Addme, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(toppicCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(Mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(toppicCourse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Mainpanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void MenufootMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_MenufootMouseClicked
        int RowIndex = Menufoot.getSelectedRow();
        try {
            ArrayList<Maincourse> product = Readflie.load("Maincourse.bin");
            Maincourse sa = product.get(RowIndex);
            ImageIcon imageicon = new ImageIcon(sa.getfilename());
            Image img = imageicon.getImage().getScaledInstance(panal.getWidth(),  panal.getHeight(), Image.SCALE_SMOOTH);
            panal.setIcon(new ImageIcon(img));
            Namefood.setText(sa.getNames());
            Food.setText(sa.getFoot());
            Recipe.setText(sa.getRecipe());
            
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }                                     
    

    private void AddmeActionPerformed(java.awt.event.ActionEvent evt) {
    Addmenu.Addmenus();
    }


    public static void AddrowoTable1() {
        Menufoot.setModel(new DefaultTableModel(new Object[][] {}, new String[] { "Picture", "Menu" }));
        DefaultTableModel Model = (DefaultTableModel) Menufoot.getModel();
        ArrayList<Maincourse> productList;
        Addrow();

        try {
            productList = Readflie.load("Maincourse.bin");
            for (int i = 0; i < productList.size(); i++) {
                Maincourse sa = productList.get(i);
                JLabel image = new JLabel();
                ImageIcon imageicon = new ImageIcon(sa.getfilename());
                Image img = imageicon.getImage().getScaledInstance(60, 60, Image.SCALE_SMOOTH);
                image.setIcon(new ImageIcon(img));
                Model.insertRow(Model.getRowCount(), new Object[] { image, sa.getNames() });
            }
        } catch (IOException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }

        /*
         * ArrayList<String> str = courses.Getname(); for (int i = 0; i < str.size();
         * i++) { Model.insertRow(Model.getRowCount(), new Object[] { null,str.get(i)
         * }); }
         * 
         * } /*Maincourse[] course = courses.readobject(); for (int i = 0; i <
         * course.length; i++) { String name =course[i].getName();
         * Model.insertRow(Model.getRowCount(), new Object[] { null,name }); }
         */

    }

    public static void Addrow() {
        DefaultTableModel Model = (DefaultTableModel) Menufoot.getModel();
        Object[] newIdentifiers =  new Object[] { "Picture", "Menu" };
        Model.setColumnIdentifiers(newIdentifiers);
		Menufoot.setFillsViewportHeight(true);
		Menufoot.getColumn("Picture").setCellRenderer(new CellRenderer());
        

    }
    public static class CellRenderer implements TableCellRenderer {

		@Override
		public  Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected,
                boolean hasFocus,
				int row, int column) {

			TableColumn tb = Menufoot.getColumn("Picture");
			tb.setMaxWidth(60);
			tb.setMinWidth(60);

			Menufoot.setRowHeight(60);

			return (Component) value;
		}

	}
    /**
     * @param args the command line arguments
     */
    public void Display() {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Course.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Course().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Addme;
    private javax.swing.JTextArea Food;
    private javax.swing.JPanel Mainpanel;
    private static javax.swing.JTable Menufoot;
    private javax.swing.JScrollPane Menulist;
    private javax.swing.JTextField Namefood;
    private javax.swing.JTextArea Recipe;
    private javax.swing.JScrollPane TextFoot;
    private javax.swing.JLabel Texttopic;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel panal;
    private javax.swing.JPanel toppicCourse;
    // End of variables declaration//GEN-END:variables
}
